
@page "/blazorjs"
@inject IJSRuntime _JSRuntime

<h3>Blazorjs</h3>
<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="bg-@Theme" style="height:1000px"><h2 id="targetElement">Main title</h2>@* id ฝั่งหน้าเว็บ name โค้ดเบื้องหลัง *@
    <div class="row">
        @if (ConfirmResult)
        {
            <p>Confirmation has been made!</p>
        }
        else
        {
            <p>Pending Confirmation.</p>
        }
    </div>
</div>

<div class="row">
    <button class="btn btn-success" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger" @onclick="ToastrError">Toastr Failure</button>
</div>
<div class="row">
    <button class="btn btn-success m-2" style="width:200px" @onclick="SweetalertSuccess">Sweetalert Success</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="SweetalertError">Sweetalert Failure</button>
</div>
@code {
    private string Theme = "info";
    private string ConfirmMessage = "Are you sure you want to change color here?";
    private bool ConfirmResult { get; set; }
    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
        if(ConfirmResult)
        {
            Theme = "success";
        }
        else
        {
            Theme = "info";
        }
    }
    private async Task ToastrSuccess()
    {
        await _JSRuntime.ToastrSuccess("Success Notification");
    }


    private async Task ToastrError()
    {
        await _JSRuntime.ToastrError("Error Notification");
    }


    private async Task SweetalertSuccess()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSwal", "success", "sdf");
    }

    private async Task SweetalertError()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSwal", "error", "Task faillure");
    }


    
}
